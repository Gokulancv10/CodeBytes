"""
This question is asked by Google. You are given two strings, s and t which only consist of lowercase letters. 
t is generated by shuffling the letters in s as well as potentially adding an additional random character. 
Return the letter that was randomly added to t if it exists, otherwise, return ''.

Note: You may assume that at most one additional character can be added to t.

Ex: Given the following strings...

s = "foobar", t = "barfoot", return 't'
s = "ide", t = "idea", return 'a'
s = "coding", t "ingcod", return ''
"""
from collections import Counter
print('------Using Counter---------')
def solution(s, t):
    a = Counter(s)
    b = Counter(t)
    res = b - a

    if not res:
        return 'None'
    for i in res:
        return i

print(solution('foobar', 'barfoot'))
print(solution('ide', 'idea'))
print(solution('coding', 'ingcod'))

print('------Using Set And For---------')

def solution(s, t):
    
    res = set(t)

    for i in res:
        if i not in s:
            return i
    return 'None'

print(solution('foobar', 'barfoot'))
print(solution('ide', 'idea'))
print(solution('coding', 'ingcod'))

print('------Using Set---------')

def solution(s, t):
    
    a = set(s)
    b = set(t)
    res = b - a

    if not res:
        return 'None'
    for i in res:
        return i

print(solution('foobar', 'barfoot'))
print(solution('ide', 'idea'))
print(solution('coding', 'ingcod'))

print('---------Using XOR------------')

def solution(s, t):
    ans = 0

    for c in s:
        ans ^= ord(c)

    for c in t:
        ans ^= ord(c)           
    return chr(ans) if ans else 'None'

print(solution('foobar', 'barfoot'))
print(solution('ide', 'idea'))
print(solution('coding', 'ingcod'))